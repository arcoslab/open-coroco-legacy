;******************************************************************************
;   MSP430FG439 Integer-Float multiplication using Horner's Algorithm with CSD format 
;
;   Description: This code performs a 16-bit integer and a float number 
;                multplication of numbers to return an 16-bit integer
;                 
;
;   Note:        This code assumes 32.768kHz XTAL on LFXT1 on the MSP430FG439 
;
;                 MSP430FG439
;               -----------------
;              |              XIN|-  
;              |                 | 32.768kHz
;              |             XOUT|-
;              |                 |
;
;   K. Venkat
;   Texas Instruments Inc.
;   July 2006
;   Built with IAR Embedded Workbench Version: 3.41A
;*******************************************************************************/
	    public mul_csd_float

	    RSEG CODE

mul_csd_float:

            mov.w     R12,R13               ; The operand "input" in register R12  
            rla.w     R13
            rla.w     R13
            rla.w     R13
            sub.w     R12,R13               ; X1=X*2^3-X
            rla.w     R13
            rla.w     R13
            rla.w     R13
            sub.w     R12,R13               ; X2=X1*2^3-X
            rla.w     R13
            rla.w     R13
            add.w     R12,R13               ; X3=X*2^2+X
            rla.w     R13                   ; X4=X3*2^1, R13 has intermediate  
                                            ; result due to integer part 441
            mov.w     R12,R14               ; The operand "input" in register R12 
            rra.w     R14       
            rra.w     R14
            rra.w     R14
            sub.w     R12,R14               ; X1=X*2^-3-X 
            rra.w     R14
            rra.w     R14
            sub.w     R12,R14               ; X2=X1*2^-2-X 
            rra.w     R14
            rra.w     R14
            sub.w     R12,R14               ; X3=X2*2^-2-X 
            rra.w     R14
            rra.w     R14
            rra.w     R14                   ; X4=X3*2^-3, R14 has intermediate  
                                            ; result due to fractional part 0.8375 
            add.w     R14,R13               ; Intermediate results added to give 
                                            ; final result
            mov.w     R13,R12               ; The final answer returned to the 
                                            ; calling function
            ret
            END
        
       